{"version":3,"sources":["../../../src/core/internals/client.ts"],"sourcesContent":["import { API_PREFIX } from '../constants';\nimport { serializer } from '../serializer';\nimport type { ActionType } from '../types';\n\nexport function __cq_invoke_action(type: ActionType, action: string) {\n\treturn async (input?: any) => {\n\t\tlet url = API_PREFIX + action;\n\t\tif (type === 'query') {\n\t\t\turl += `?input=${serializer.serializeForQuery(input)}`;\n\t\t}\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: type === 'query' ? 'GET' : 'POST',\n\t\t\theaders: type === 'query' ? {} : { 'Content-Type': 'application/json' },\n\t\t\tbody: type === 'command' && input !== undefined ? serializer.serialize(input) : undefined,\n\t\t});\n\n\t\tconst text = await response.text();\n\t\tif (!response.ok) {\n\t\t\tconst result = await Promise.resolve(text)\n\t\t\t\t.then(JSON.parse)\n\t\t\t\t.catch(() => null);\n\t\t\tconsole.error(`[cq] Error invoking action: ${action}`, result);\n\t\t\tthrow new Error(result?.message || 'Unknown error');\n\t\t}\n\t\tconst result = serializer.deserialize(text);\n\n\t\treturn result;\n\t};\n}\n"],"mappings":";;;;;;;;AAIO,SAAS,mBAAmB,MAAkB,QAAgB;AACpE,SAAO,OAAO,UAAgB;AAC7B,QAAI,MAAM,aAAa;AACvB,QAAI,SAAS,SAAS;AACrB,aAAO,UAAU,WAAW,kBAAkB,KAAK,CAAC;AAAA,IACrD;AACA,UAAM,WAAW,MAAM,MAAM,KAAK;AAAA,MACjC,QAAQ,SAAS,UAAU,QAAQ;AAAA,MACnC,SAAS,SAAS,UAAU,CAAC,IAAI,EAAE,gBAAgB,mBAAmB;AAAA,MACtE,MAAM,SAAS,aAAa,UAAU,SAAY,WAAW,UAAU,KAAK,IAAI;AAAA,IACjF,CAAC;AAED,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,QAAI,CAAC,SAAS,IAAI;AACjB,YAAMA,UAAS,MAAM,QAAQ,QAAQ,IAAI,EACvC,KAAK,KAAK,KAAK,EACf,MAAM,MAAM,IAAI;AAClB,cAAQ,MAAM,+BAA+B,MAAM,IAAIA,OAAM;AAC7D,YAAM,IAAI,MAAMA,SAAQ,WAAW,eAAe;AAAA,IACnD;AACA,UAAM,SAAS,WAAW,YAAY,IAAI;AAE1C,WAAO;AAAA,EACR;AACD;","names":["result"]}