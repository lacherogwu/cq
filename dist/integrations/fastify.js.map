{"version":3,"sources":["../../src/integrations/fastify.ts"],"sourcesContent":["import fp from 'fastify-plugin';\nimport { Readable } from 'node:stream';\nimport type { ReadableStream } from 'node:stream/web';\nimport { ACTION_META_KEY, API_PREFIX } from '../core/constants';\nimport { convertActionsObjectToRegistry, createH3App } from '../core/internals/server';\nimport type { Action, ActionsMap, ActionType } from '../core/types';\n\ntype FastifyPluginOptions = {\n\tactions: ActionsMap;\n\t// onError?: (result: Record<string, any>, err: Error) => any;\n};\n\nexport const cqFastify = fp<FastifyPluginOptions>((fastify, opts, done) => {\n\tconst { actions } = opts;\n\n\tfastify.removeContentTypeParser('application/json');\n\tfastify.addContentTypeParser('application/json', { parseAs: 'string' }, (_req, body, done) => {\n\t\tdone(null, body);\n\t});\n\n\tconst actionsRegistry = convertActionsObjectToRegistry(actions);\n\tconst h3App = createH3App(actionsRegistry);\n\n\tactionsRegistry.forEach((actions, moduleKey) => {\n\t\tactions.forEach((action, actionKey) => {\n\t\t\tconst url = `${API_PREFIX}${moduleKey}${moduleKey === '' ? '' : '/'}${actionKey}`;\n\t\t\tconst method = action[ACTION_META_KEY].type === 'query' ? 'GET' : 'POST';\n\t\t\tfastify.route({\n\t\t\t\turl,\n\t\t\t\tmethod,\n\t\t\t\thandler: async (req, reply) => {\n\t\t\t\t\tconst response = await h3App.request(req.url, {\n\t\t\t\t\t\tmethod: req.method,\n\t\t\t\t\t\theaders: req.headers as Record<string, string>,\n\t\t\t\t\t\tbody: req.body as any,\n\t\t\t\t\t});\n\n\t\t\t\t\treply.status(response.status);\n\t\t\t\t\tresponse.headers.forEach((value, key) => {\n\t\t\t\t\t\treply.header(key, value);\n\t\t\t\t\t});\n\t\t\t\t\tif (response.body) {\n\t\t\t\t\t\tconst stream = Readable.fromWeb(response.body as ReadableStream);\n\t\t\t\t\t\treturn reply.send(stream);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn reply.send();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t});\n\n\tdone();\n});\n"],"mappings":";;;;;;;;;;;;AAAA,OAAO,QAAQ;AACf,SAAS,gBAAgB;AAWlB,IAAM,YAAY,GAAyB,CAAC,SAAS,MAAM,SAAS;AAC1E,QAAM,EAAE,QAAQ,IAAI;AAEpB,UAAQ,wBAAwB,kBAAkB;AAClD,UAAQ,qBAAqB,oBAAoB,EAAE,SAAS,SAAS,GAAG,CAAC,MAAM,MAAMA,UAAS;AAC7F,IAAAA,MAAK,MAAM,IAAI;AAAA,EAChB,CAAC;AAED,QAAM,kBAAkB,+BAA+B,OAAO;AAC9D,QAAM,QAAQ,YAAY,eAAe;AAEzC,kBAAgB,QAAQ,CAACC,UAAS,cAAc;AAC/C,IAAAA,SAAQ,QAAQ,CAAC,QAAQ,cAAc;AACtC,YAAM,MAAM,GAAG,UAAU,GAAG,SAAS,GAAG,cAAc,KAAK,KAAK,GAAG,GAAG,SAAS;AAC/E,YAAM,SAAS,OAAO,eAAe,EAAE,SAAS,UAAU,QAAQ;AAClE,cAAQ,MAAM;AAAA,QACb;AAAA,QACA;AAAA,QACA,SAAS,OAAO,KAAK,UAAU;AAC9B,gBAAM,WAAW,MAAM,MAAM,QAAQ,IAAI,KAAK;AAAA,YAC7C,QAAQ,IAAI;AAAA,YACZ,SAAS,IAAI;AAAA,YACb,MAAM,IAAI;AAAA,UACX,CAAC;AAED,gBAAM,OAAO,SAAS,MAAM;AAC5B,mBAAS,QAAQ,QAAQ,CAAC,OAAO,QAAQ;AACxC,kBAAM,OAAO,KAAK,KAAK;AAAA,UACxB,CAAC;AACD,cAAI,SAAS,MAAM;AAClB,kBAAM,SAAS,SAAS,QAAQ,SAAS,IAAsB;AAC/D,mBAAO,MAAM,KAAK,MAAM;AAAA,UACzB,OAAO;AACN,mBAAO,MAAM,KAAK;AAAA,UACnB;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,OAAK;AACN,CAAC;","names":["done","actions"]}